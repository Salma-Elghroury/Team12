<?xml version="1.0" encoding="UTF-8"?><testrun name="Milestone2PublicTests" project="Team12_M2" tests="222" started="222" failures="36" errors="0" ignored="0">
  <testsuite name="test.Milestone2PublicTests" time="0.09">
    <testcase name="testValidateSwapMethodOtherMarble1InBaseInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSwapMethodOtherMarbleInBaseInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodOnTrackEnterSafeZoneInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInSevenClassLogicWithTwoMarbles" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetSafeZoneIsPrivateInClassBoard" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetNextPlayerColourInGameDeclaration" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInQueenClassLogicWithOneMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testCanPlayTurnGameFalse" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: canPlayTurn method in class Game should check whether the playerâ€™s turn should be skipped by comparing their hand card count against the turn. expected:&lt;false&gt; but was:&lt;true&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testCanPlayTurnGameFalse(Milestone2PublicTests.java:9269)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSelectCardMethodPresentInPlayerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActLogicInJackClass" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Marbles should be swaped&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testActLogicInJackClass(Milestone2PublicTests.java:6591)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateStepsMethodMarbleNotInSafeZoneNotOnTrackExceptionBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testFieldMarbleExceptionThrown" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testCheckWinGame" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSendToSafeFailCaseSafeZoneMarble" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testSendToSafeFailCaseSafeZoneMarble(Milestone2PublicTests.java:7407)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleColourMethodInFiveClassLogic" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The colour of marble is valid&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testValidateMarbleColourMethodInFiveClassLogic(Milestone2PublicTests.java:13245)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndPlayerTurnGameNewRound" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method endPlayerTurn in class Game.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameNewRound(Milestone2PublicTests.java:9746)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSwapExistenceInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodOtherPlayerMarbleReturnBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetPositionInPathMethodLogicInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidatePathCase5InBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateFieldingInBoardDeclaration" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassJackDoesntDestroysMarblesInPath" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSendToBaseBoardOccupiedCellSameColour" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testIsFullIsPublicInSafeZoneClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetEntryPositionMethodLogicInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEndPlayerTurnGameNewTurn" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method endPlayerTurn in class Game.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameNewTurn(Milestone2PublicTests.java:9645)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSelectMarbleMethodInPlayerClassLogicMarbleAlreadyExists" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testRefillPoolLogicInSafeDeckClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testMoveByExistenceInBoardManagerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizePresentInTenClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetPoolSizeIsPublicInSafeDeckClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetOneMarbleInPlayerDeclaration" classname="test.Milestone2PublicTests" time="0.003"/>
    <testcase name="testValidatePathCase4InBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testMoveBoardDestroyTarget" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected IllegalDestroyException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testMoveBoardDestroyTarget(Milestone2PublicTests.java:8052)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSelectCardMethodInGameClassLogic" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodTooHighRankOnTrackInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizePresentInCardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDiscardCardColourInGame" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassKingDoesntDestroysMarblesNOTInPath" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: java.lang.ArrayIndexOutOfBoundsException: -1 occured while accessing method act in class King&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testActMethodInClassKingDoesntDestroysMarblesNOTInPath(Milestone2PublicTests.java:13592)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCanPlayTurnGameTrue" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInKingClassLogicWithOneMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeAbsentInStandardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodTooHighRankInSafeZoneInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetSafeZoneMethodRightColourInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDiscardCardWithoutArgsExistenceInGameManagerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetActivePlayerColourExistenceInGameManagerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursAbsentInWildClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidatePathRemovingConditionFromCase2InBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidatePathCase3InBoardClass" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The given path is invalid because it contains a cell with a marble belonging to the active player; therefore,an IllegalMovementException is expected to be thrown, but it is not.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testValidatePathCase3InBoardClass(Milestone2PublicTests.java:257)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidatePathExcludeTargetInCountingInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizePresentInSevenClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testRefillPoolExistenceInDeckClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActonTenWithEmptyMarbles" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDestroyMarbleExistenceInBoardManagerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testKingActSendToBase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDeselectAllMethodPresentInGameClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSelectMarbleMethodInPlayerClassLogicWithEmptyList" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerTurnMethodInClassGameWithCardAce" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: null occured while accessing method playPlayerTurn in class Game&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnMethodInClassGameWithCardAce(Milestone2PublicTests.java:14315)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayPlayerTurnMethodInClassGameWithCardTen" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: null occured while accessing method playPlayerTurn in class Game&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnMethodInClassGameWithCardTen(Milestone2PublicTests.java:14548)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateStepsIsCalledInMethodMoveByInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeAbsentInWildClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassSevenDoesntDestroysMarblesInPathWhenMoving1Marble" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: nulljava.lang.ArrayIndexOutOfBoundsException: -1 occured while accessing method act in class Seven&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testActMethodInClassSevenDoesntDestroysMarblesInPathWhenMoving1Marble(Milestone2PublicTests.java:13945)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testvalidateFieldingBoardOccupiedCell" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassAceMovesMarble1Step" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeAbsentInSaverClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodPresentInPlayerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSwapMethodBothMarblesNotOnTrackInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodInClassPlayerWithCardTen" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerActBurnerSelectedMarbles" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSwapInBoardClass" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Marbles should be swaped&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testSwapInBoardClass(Milestone2PublicTests.java:5971)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleSizeInCardClassLogicFailCase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidatePathCase1InBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEditSplitDistanceMethodPresentInGameClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testIsFullExistenceInSafeZoneClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodOtherPlayerMarbleBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodSelectedCardJackCaseEmptyListMarbleSize" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSendToSafeBoardOldLocation" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassTenMovesMarble10Steps" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetPositionInPathMarbleNotOnPathBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursPresentInBurnerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSelectCardMethodPresentInGameClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetPositionInPathUpperBoundryBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodInClassPlayerWithCardSeven" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetBasePositionMethodLogicInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testAceActEmptyExceptionThrown" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSelectMarlbeMethodPresentInPlayerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEndPlayerTurnGameNotClearingFirePit" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method endPlayerTurn in class Game.null&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameNotClearingFirePit(Milestone2PublicTests.java:10506)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidatePathCheckingTheConditionOfDestoryIsFalseInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSwapMethodActivePlayerMarble2InBaseInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEditSplitDistanceMethodInGameClassThrowsException" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethoReturnsOnTrackInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSelectMarbleMethodInGameClassThrowsException" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateDestroyNotFailCaseSafeMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActTenEmptyRandomTest" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetNextPlayerColourInGame2" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInCardClassLogic" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetEntryPositionIsPrivateInClassBoard" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetBasePositionMethodNullColourInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColourMethodInJackClassLogicWithTwoMarbles" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActIsPublicInSafeJackClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActTenEmptyMarblesEmptyHandException" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsIsPrivateInClassBoard" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInSevenClassLogicWithOneMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInKingClassLogicWithNoMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDiscardCardInGameRandom" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSwapExistenceInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInAceClassLogicWithOneMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testMoveBoardDestroyTargetTrap" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method move in class Board.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testMoveBoardDestroyTargetTrap(Milestone2PublicTests.java:8165)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSendToSafeNotFailCaseSafeZoneMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodSelectedCardTenCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassSevenMovesOneMarble7Steps" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testregainMarblePlayer" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassJacknMovesMarble11Steps" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSendHomeGameMarbleAddedToPlayer" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testFieldMarbleSendToBase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInQueenClassLogicFailCase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateDestroyNotFailCaseSafeMarble2" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEndPlayerTurnGameClearingFirePit" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method endPlayerTurn in class Game.null&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameClearingFirePit(Milestone2PublicTests.java:10435)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testIsFullMethodCaseNotFullInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeAbsentInFiveClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSendToBaseBoardOccupiedCell" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: exception.IllegalDestroyException: Marble is in a Base Cell occured when calling sendToBase in Board&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testSendToBaseBoardOccupiedCell(Milestone2PublicTests.java:1567)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleSizeInAceClassLogicWithNoMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSavingNotFailCaseSafeZoneMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDeselectAllMethodInPlayerClassLogic" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColourMethodInBurnerClassLogic" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testSelectMarbleMethodPresentInGameClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEditSplitDistanceMethodInGameClassThrowsExceptionSecond" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColourMethodInJackClassWithOneMarbleFail" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: The colour of marble is invalid&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertFalse(Assert.java:64)&#13;
	at test.Milestone2PublicTests.testValidateMarbleColourMethodInJackClassWithOneMarbleFail(Milestone2PublicTests.java:13192)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateStepsMethodReturn2SafeZonesCellsInBoardClass" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testActSaverNotFailCaseSafeZone" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSendHomeInGameDeclaration" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateMarbleColourMethodInStandardClassLogic" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetOneMarblePlayer2" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInCardClassLogicFailCaseWithEmptyList" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testPlayMethodSelectedCardAceCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInJackClassLogicWithTwoMarbles" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testDiscardCardInGameException" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerActSaver" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testActMethodInClassSevenMovesTwoMarbles7Steps" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testFieldMarbleInGameDeclaration" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEndPlayerTurnGameRefillingDeck" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method endPlayerTurn in class Game.null&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameRefillingDeck(Milestone2PublicTests.java:10360)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidatePathCheckingTheLoopStartInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSelectCardMethodInPlayerClassLogic" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActBurnerDestroyMarble" classname="test.Milestone2PublicTests" time="0.004">
      <failure>java.lang.AssertionError: Act method should call destroyMarble in class board. expected:&lt;null&gt; but was:&lt;model.player.Marble@17db7a6&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testActBurnerDestroyMarble(Milestone2PublicTests.java:8384)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateStepsMethoBackwardsOnTracknTrackInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassCardIsAbstract" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testGetPositionInPathMethodExistenceInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColourMethodInJackClassLogicWithTwoMarblesFail" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The colour of marbles should be different&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertFalse(Assert.java:64)&#13;
	at test.Milestone2PublicTests.testValidateMarbleColourMethodInJackClassLogicWithTwoMarblesFail(Milestone2PublicTests.java:13123)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayMethodSelectedCardKingCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateMarbleSizeInJackClassLogicWithNoMarble" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleColoursAbsentInStandardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodMovingOtherPlayerMarbleBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleColoursPresentInFiveClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursAbsentInKingClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testMoveBoardOldLocation" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testDiscardCardColourInGameRandom" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateMarbleSizePresentInQueenClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSavingFailCasePositionOnTrackMarble" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testValidateSavingFailCasePositionOnTrackMarble(Milestone2PublicTests.java:7314)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testdestroyMarbleBoardSendHome" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDeselectAllMethodPresentInPlayerClass" classname="test.Milestone2PublicTests" time="0.003"/>
    <testcase name="testGetNextPlayerColourExistenceInGameManagerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSwapExistenceInBoardManagerClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateSwapMethodrMarble2NotOnTrackInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSendToBaseBoardSetMarble" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateMarbleSizeInKingClassLogicFailCase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodSelectedCardNullCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEndPlayerTurnGameAddingSelectedCardToFirepit" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method endPlayerTurn in class Game.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameAddingSelectedCardToFirepit(Milestone2PublicTests.java:9887)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayPlayerTurnGameBurner" classname="test.Milestone2PublicTests" time="0.003">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method playPlayerTurn in class Game.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnGameBurner(Milestone2PublicTests.java:8498)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleColoursAbsentInFourClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetEntryPositionMethodNullColourInBoardClass" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testSwapCallsValidateSwapInBoardClass" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Expected IllegalSwapException was not thrown, validateSwap Method was not called&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testSwapCallsValidateSwapInBoardClass(Milestone2PublicTests.java:6089)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndPlayerTurnGameNotRefillingHands" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method endPlayerTurn in class Game.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameNotRefillingHands(Milestone2PublicTests.java:10285)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testsendToBaseInBoardDeclaration" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursAbsentInQueenClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodSelectedCardStandardCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testCheckWinNoWinnerGame" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSavingFailCaseSafeZoneMarble" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testValidateSavingFailCaseSafeZoneMarble(Milestone2PublicTests.java:7597)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateDestroyFailCasePositionInPath" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected IllegalDestroyException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testValidateDestroyFailCasePositionInPath(Milestone2PublicTests.java:6904)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayMethodSelectedCardSevenCaseEmptyListMarbleSize" classname="test.Milestone2PublicTests" time="0.007"/>
    <testcase name="testPlayMethodSelectedCardSevenCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInTenClassLogicFailCase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEndPlayerTurnGameRefillingHands" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method endPlayerTurn in class Game.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameRefillingHands(Milestone2PublicTests.java:10148)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSelectCardMethodInPlayerClassThrowsException" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodSelectedCardJackCaseMarbleColour" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testPlayMethodSelectedCardJackCaseMarbleColour(Milestone2PublicTests.java:12904)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayMethodSelectedCardStandardCaseMarbleColour" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodTooHighRankOnEntryInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerFailInvalidateMarbleColours" classname="test.Milestone2PublicTests" time="0.006"/>
    <testcase name="testValidatePathIsCalledInMethodMoveByInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testIsFullMethodCaseFullInSafeZoneClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursAbsentInAceClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodInClassPlayerWithCardFive" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: nullexception.InvalidMarbleException: Invalid colours of marbles. occured while accessing method play in class Player&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testPlayMethodInClassPlayerWithCardFive(Milestone2PublicTests.java:14190)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayMethodInClassPlayerWithCardJack" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursPresentInCardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursPresentInJackClass" classname="test.Milestone2PublicTests" time="0.006"/>
    <testcase name="testActExistenceInJackClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSelectMarbleMethodInGameClassLogicWithListofOneMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidatePathRemovingConditionSafeCellFromCase4InBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testGetSafeZoneMethodZoneNotFoundInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidatePathCheckingOnMarbleColorInsteadActivePlayerColorInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassFiveMovesMarble5Steps" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodOnTrackOneStepIntoSafeZoneInBoardClass" classname="test.Milestone2PublicTests" time="0.004"/>
    <testcase name="testActMethodInClassKingDestroysMarblesInPath" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testPlayPlayerFailInvalidateMarblesSize" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testMoveBoardAssignNewTrapCell" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method move in class Board.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testMoveBoardAssignNewTrapCell(Milestone2PublicTests.java:8291)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidatePathCase2_1InBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testGetOneMarblePlayerEmpty" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInTenClassLogicWithNoMarble" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleColourMethodInBurnerClassFail" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEditSplitDistanceMethodInGameClassLogic" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizePresentInAceClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDestroyMarbleFailCase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInJackClassFailCase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerActSaverSelectedMarbles" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerTurnMethodInClassGameWithCardFive" classname="test.Milestone2PublicTests" time="0.006">
      <failure>java.lang.AssertionError: null occured while accessing method playPlayerTurn in class Game&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnMethodInClassGameWithCardFive(Milestone2PublicTests.java:14489)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayPlayerTurnMethodInClassGameWithCardJack" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: null occured while accessing method playPlayerTurn in class Game&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnMethodInClassGameWithCardJack(Milestone2PublicTests.java:14373)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndPlayerTurnGameDeselecting" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method endPlayerTurn in class Game.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameDeselecting(Milestone2PublicTests.java:10009)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateSwapMethodMarblesNoneBasePositonsBoardClass" classname="test.Milestone2PublicTests" time="0.004"/>
    <testcase name="testValidateStepsMethodExistenceInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerTurnMethodInClassGameWithCardSeven" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: null occured while accessing method playPlayerTurn in class Game&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnMethodInClassGameWithCardSeven(Milestone2PublicTests.java:14431)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testDiscardCardColourInGameDeclaration" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testFieldMarbleRemoveMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testdestroyMarbleBoardMarblePosition" classname="test.Milestone2PublicTests" time="0.002"/>
  </testsuite>
</testrun>
